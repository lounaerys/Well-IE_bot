from datetime import datetime
from telegram import InlineKeyboardButton, InlineKeyboardMarkup
from user_data.user_data_storage import (
    get_user_progress_for_periods,
    get_last_user_entry
)
from keyboards.progress_kb import progress_keyboard
from handlers.parameters_states import PROGRESS_MENU, PROGRESS_PARAM, PROGRESS_OVERALL

UNITS = {
    'weight': '–∫–≥','hips':'—Å–º','thigh':'—Å–º',
    'waist':'—Å–º','chest':'—Å–º','biceps':'—Å–º'
}
PERIODS = ['–° –ø–æ—Å–ª–µ–¥–Ω–µ–≥–æ –∏–∑–º–µ—Ä–µ–Ω–∏—è','–ó–∞ –Ω–µ–¥–µ–ª—é','–ó–∞ –º–µ—Å—è—Ü']

def pretty_param_name(p):
    names = {
       'weight':'–í–µ—Å','hips':'–û–±—ä–µ–º —è–≥–æ–¥–∏—Ü','thigh':'–û–±—ä–µ–º –±–µ–¥—Ä–∞',
       'waist':'–û–±—ä–µ–º —Ç–∞–ª–∏–∏','chest':'–û–±—ä–µ–º –≥—Ä—É–¥–∏','biceps':'–û–±—ä–µ–º –±–∏—Ü–µ–ø—Å–∞'
    }
    return f'¬´{names[p]}¬ª'

def show_progress_menu(update, context):
    if update.callback_query:
        q = update.callback_query; q.answer()
        q.edit_message_text('–í—ã–±–µ—Ä–∏—Ç–µ –ø–∞—Ä–∞–º–µ—Ç—Ä:', reply_markup=progress_keyboard())
    else:
        msg = update.message.reply_text('–í—ã–±–µ—Ä–∏—Ç–µ –ø–∞—Ä–∞–º–µ—Ç—Ä:', reply_markup=progress_keyboard())
    return PROGRESS_MENU

def progress_for_param(update, context):
    q = update.callback_query; q.answer()
    param   = q.data.replace('progress_','')
    user_id = q.from_user.id

    prog      = get_user_progress_for_periods(user_id, param)
    last_ent  = get_last_user_entry(user_id) or {}
    current   = last_ent.get(param, '–Ω–µ—Ç –¥–∞–Ω–Ω—ã—Ö')

    text = (
        f"{pretty_param_name(param)}\n"
        f"–¢–µ–∫—É—â–µ–µ –∑–Ω–∞—á–µ–Ω–∏–µ: <b>{current}</b> {UNITS[param]}\n"
    )
    for per in PERIODS:
        v = prog.get(per)
        if isinstance(v, dict):
            suf = f" (–æ—Ç {v['date']})" if v['date'] else ''
            text += f"‚Ä¢ {per}{suf}: {v['value']}\n"
        else:
            text += f"‚Ä¢ {per}: {v}\n"

    kb = [[InlineKeyboardButton('üîô –ù–∞–∑–∞–¥', callback_data='progress_menu')]]
    q.edit_message_text(text, reply_markup=InlineKeyboardMarkup(kb), parse_mode='HTML')
    return PROGRESS_PARAM

def overall_progress(update, context):
    q = update.callback_query; q.answer()

    user_id = q.from_user.id
    text = '<b>üìä –û–±—â–∏–π –ø—Ä–æ–≥—Ä–µ—Å—Å</b>\n\n'
    for p in UNITS:
        prog  = get_user_progress_for_periods(user_id, p)
        start = prog.get('–° –Ω–∞—á–∞–ª–∞ –∏–∑–º–µ—Ä–µ–Ω–∏–π', '–Ω–µ—Ç –¥–∞–Ω–Ω—ã—Ö')
        text += f"{pretty_param_name(p)}: {start}\n"

    kb = [[InlineKeyboardButton('üîô –ù–∞–∑–∞–¥', callback_data='progress_menu')]]
    q.edit_message_text(text, reply_markup=InlineKeyboardMarkup(kb), parse_mode='HTML')
    return PROGRESS_OVERALL

def progress_menu_callback(update, context):
    return show_progress_menu(update, context)
